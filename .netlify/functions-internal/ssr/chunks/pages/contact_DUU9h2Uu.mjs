/* empty css                          */
import { c as createAstro, d as createComponent, r as renderTemplate, m as maybeRenderHead, f as renderSlot, g as renderComponent } from '../astro_DzfhlQC2.mjs';
import 'kleur/colors';
import { $ as $$BlogPost } from './__Bw6aSxhf.mjs';
import 'clsx';
/* empty css                            */

const $$Astro$1 = createAstro("https://example.com");
const $$Button = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Button;
  return renderTemplate`${maybeRenderHead()}<button class="appearance-none py-2 px-4 bg-purple-500 text-white font-semibold rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75"> ${renderSlot($$result, $$slots["default"])} </button> `;
}, "C:/Users/User/Documents/astro-blog-latest/src/components/button.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://example.com");
const $$Contact = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Contact;
  return renderTemplate`${renderComponent($$result, "Layout", $$BlogPost, { "title": "Contact", "description": "get in touch", "pubDate": /* @__PURE__ */ new Date("August 08 2021"), "heroImage": "/contact.png", "data-astro-cid-uw5kdbxl": true }, { "default": ($$result2) => renderTemplate(_a || (_a = __template([" ", '<p data-astro-cid-uw5kdbxl>Have something to say? I am here to respond, simply fill up the form below: </p>  <form action="https://api.web3forms.com/submit" method="POST" id="form" class="needs-validation" data-astro-reload novalidate data-astro-cid-uw5kdbxl> <!-- Add your Web3Forms Access Key --> <input type="hidden" name="access_key" value="79f10a95-dbbd-411e-9b2d-f18079349455" data-astro-cid-uw5kdbxl> <input type="checkbox" class="hidden" style="display:none" name="botcheck" data-astro-cid-uw5kdbxl> <div class="mb-5" data-astro-cid-uw5kdbxl> <input type="text" placeholder="Full Name" required class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100" name="name" data-astro-cid-uw5kdbxl> <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1" data-astro-cid-uw5kdbxl>\nPlease provide your full name.\n</div> </div> <div class="mb-5" data-astro-cid-uw5kdbxl> <label for="email_address" class="sr-only" data-astro-cid-uw5kdbxl>Email Address</label><input id="email_address" type="email" placeholder="Email Address" name="email" required class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100" data-astro-cid-uw5kdbxl> <div class="empty-feedback text-red-400 text-sm mt-1" data-astro-cid-uw5kdbxl>\nPlease provide your email address.\n</div> <div class="invalid-feedback text-red-400 text-sm mt-1" data-astro-cid-uw5kdbxl>\nPlease provide a valid email address.\n</div> </div> <div class="mb-3" data-astro-cid-uw5kdbxl> <textarea name="message" required placeholder="Your Message" class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none h-36 focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100" data-astro-cid-uw5kdbxl></textarea> <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1" data-astro-cid-uw5kdbxl>\nPlease enter your message.\n</div> </div> ', ' <div id="result" class="mt-3 text-center" data-astro-cid-uw5kdbxl></div> </form>  <script>\n  // astro:page-load to support view Transitions.\n  // use DOMContentLoaded event if you are not using View Transitions\n\n  document.addEventListener(\n    "astro:page-load",\n    () => {\n      const form = document.getElementById("form");\n      const result = document.getElementById("result");\n\n      form.addEventListener("submit", function (e) {\n        e.preventDefault();\n        form.classList.add("was-validated");\n        if (!form.checkValidity()) {\n          form.querySelectorAll(":invalid")[0].focus();\n          return;\n        }\n        const formData = new FormData(form);\n        const object = Object.fromEntries(formData);\n        const json = JSON.stringify(object);\n\n        result.innerHTML = "Sending...";\n\n        fetch("https://api.web3forms.com/submit", {\n          method: "POST",\n          headers: {\n            "Content-Type": "application/json",\n            Accept: "application/json",\n          },\n          body: json,\n        })\n          .then(async (response) => {\n            let json = await response.json();\n            if (response.status == 200) {\n              result.classList.add("text-green-500");\n              result.innerHTML = json.message;\n            } else {\n              console.log(response);\n              result.classList.add("text-red-500");\n              result.innerHTML = json.message;\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n            result.innerHTML = "Something went wrong!";\n          })\n          .then(function () {\n            form.reset();\n            form.classList.remove("was-validated");\n            setTimeout(() => {\n              result.style.display = "none";\n            }, 5000);\n          });\n      });\n    },\n    { once: true },\n  );\n<\/script> '])), maybeRenderHead(), renderComponent($$result2, "Button", $$Button, { "type": "submit", "size": "lg", "block": true, "data-astro-cid-uw5kdbxl": true }, { "default": ($$result3) => renderTemplate`Send Message` })) })} `;
}, "C:/Users/User/Documents/astro-blog-latest/src/pages/contact.astro", void 0);

const $$file = "C:/Users/User/Documents/astro-blog-latest/src/pages/contact.astro";
const $$url = "/contact";

export { $$Contact as default, $$file as file, $$url as url };
